schema {
  query: Query
}

type Query {
  history(coins: [String], fiat: String, dateFrom: String, dateTo: String): [HistoryType]
  ticker(coins: [String], fiat: String, exchange: String): [TickerType]
  candles(coins: [String], fiat: String, interval: String, exchange: String): [CandlesType]
  books(coins: [String], fiat: String): [BookType]
  metrics(coins: [String], fiat: String): [MetricsType]
  markets(coins: [String], fiat: String, interval: String): [MarketsType]
  assets(coins: [String], fiat: String, interval: String): [AssetType]
  supported: [SupportedType]
}

type HistoryType {
  coin: String
  values: [HistoryData]
}

type HistoryData {
  date: String!
  high: String
  low: String
  mid: String
  last: String
  bid: String
  ask: String
  volume: String
  coin: String
  fiat: String
}

type TickerType {
  exchange: String
  coin: String
  url: String
  values: [TickerData]
}

type TickerData {
  date: String
  high: String
  low: String
  mid: String
  last: String
  bid: String
  ask: String
  volume: String
}

type CandlesType {
  exchange: String
  coin: String
  url: String
  values: [CandlesData]
}

type CandlesData {
  date: String
  open: String
  close: String
  high: String
  low: String
  volume: String
}

type BookType {
  name: String
  date: String
  asks: [OrderData]
  bids: [OrderData]
}

type OrderData {
  price: String
  volume: String
}

type MetricsType {
  sourceName: String
  description: String
  marketCap: String
  price: String
  lastUpdated: String
  name: String
  volume24H: String
  percentChange7D: String
  symbol: String
  rank: String
  percentChange1H: String
  totalSupply: String
  availableSupply: String
  percentChange24H: String
  id: String
}

type MarketsType {
  ticker: [TickerType]
  candles: [CandlesType]
  orderBooks: [BookType]
}

type AssetType {
  coin: String
  metrics: [MetricsType]
}

type SupportedType {
  markets: [String]
  coins: [String]
  fiats: [String]
}
